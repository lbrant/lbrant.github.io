<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Brant的博客</title>
  <subtitle>骑马走关</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lbrant.github.io/"/>
  <updated>2017-01-12T08:35:38.735Z</updated>
  <id>https://lbrant.github.io/</id>
  
  <author>
    <name>Brant</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Nexus 5X Root后OTA升级Android Nougat的问题</title>
    <link href="https://lbrant.github.io/2017/01/12/Nexus-5X-Root%E7%BB%AD/"/>
    <id>https://lbrant.github.io/2017/01/12/Nexus-5X-Root续/</id>
    <published>2017-01-12T06:54:39.793Z</published>
    <updated>2017-01-12T08:35:38.735Z</updated>
    
    <content type="html"><![CDATA[<p>###0x01.之前在Android 6.0上面将设备Root后（<a href="http://www.jianshu.com/p/38e48ebbed89" title="Root教程" target="_blank" rel="external">Root教程</a>），手痒又忍不住通过推送的OTA升级到了Android 7.0（Nougat）,结果之前的Root全部失效，已经安装的SuperSu打开也提示没有Root权限，无奈又打算重新Root。</p>
<p>###0x02.发现进入[开发者模式]-[OEM解锁]，这一项是灰色的，但是在bootloader模式下，device state提示是unlock，怎么解决这个问题呢？答案是通过重新加锁的方式：<br>1). 先下载fastboot，如果一下再请略过：<br>Windows: <a href="http://www.devfiles.co/download/BFOZwOTB/fastboot-win32.zip" title="Download here!" target="_blank" rel="external">Download here</a><br>Mac: <a href="http://www.devfiles.co/download/Z0wmswob/fastboot-mac.zip" title="Download here!" target="_blank" rel="external">Download here!</a><br>Linux: <a href="http://www.devfiles.co/download/AA2h87iL/fastboot-linux.zip" title="Download here!" target="_blank" rel="external">Download here!</a><br>如果经常用这个命令，可以拷贝到android-sdk-windows\platform-tools目录下。</p>
<p>2). 通过命令行 adb reboot bootloader，或者关机状态下，长按[电源+音量-];</p>
<p>3). 命令行模式执行 fastboot oem lock，根据手机上提示，通过音量键选中YES，然后电源键确定后，就会自动<br>进入初次开机引导模式；</p>
<p>4). 再次打开开发者模式，发现解锁栏已经可以勾选了。</p>
<p>###0x03.再次Root，用之前的<a href="http://www.jianshu.com/p/38e48ebbed89" title="Root教程" target="_blank" rel="external">Root教程</a>中的工具，发现已经Root不了：<br><img src="http://i.imgur.com/5SetJ0x.png" alt="">，到官网上重新去看，<a href="https://autoroot.chainfire.eu/" title="CF" target="_blank" rel="external">CF</a>，下载了新版本，然后执行root-windows.bat，还是弹不出来那个unlock的提示界面；</p>
<p>###0x04. 通过fastboot unlock，在bootloader模式下，执行 fastboot oem unlock，根据提示选择YES，完成后系统就又变成unlocked的状态了；</p>
<p>###0x05. 然后下载<a href="https://dl.twrp.me/bullhead/twrp-3.0.2-2-bullhead.img" target="_blank" rel="external">twrp-3.0.2-2</a>，下载完成后拷贝到跟fastboot相同目录，然后执行 fastboot flash recovery twrp-3.0.2-2-bullhead.img；<br>注意：尽量到官网下载最新版的，我开始用的3.0.2-0的版本，刷完多次后一直都是停留在TWRP的启动页面，后面刷最新版的就可以了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###0x01.之前在Android 6.0上面将设备Root后（&lt;a href=&quot;http://www.jianshu.com/p/38e48ebbed89&quot; title=&quot;Root教程&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Root教程&lt;/a&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lbrant.github.io/2017/01/12/hello-world/"/>
    <id>https://lbrant.github.io/2017/01/12/hello-world/</id>
    <published>2017-01-12T06:45:57.436Z</published>
    <updated>2017-01-12T06:45:57.436Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android Studio Settings Repository Plugin SYNC failed problem</title>
    <link href="https://lbrant.github.io/2016/09/22/Android-Studio-Settings-Repository-Plugin-SYNC-failed-problem/"/>
    <id>https://lbrant.github.io/2016/09/22/Android-Studio-Settings-Repository-Plugin-SYNC-failed-problem/</id>
    <published>2016-09-22T05:49:10.000Z</published>
    <updated>2017-01-12T11:10:59.183Z</updated>
    
    <content type="html"><![CDATA[<p>##Pre.背景</p>
<ul>
<li>Android Studio Version：2.2;</li>
<li>某种原因导致Android Studio个人数据设置全部被删，样式回归到“出厂模式”，但在使用SYNC同步的时候，无论Overwrite Local或者Overwrite Remote一直失败，提示：<strong>Commit on repo without HEAD currently not supported</strong></li>
</ul>
<p>##1.解决方案<br>Google搜索了很久，后面在<a href="https://youtrack.jetbrains.com/issues" title="IDEA jet brains issues" target="_blank" rel="external">https://youtrack.jetbrains.com/issues</a>中找到了答案。</p>
<p>*1).git clone你Github中settings repository；</p>
<p>*2).打开C:\Users\%USER%.AndroidStudio2.2\config\settingsRepository\repository目录，并将git目录清空（如果有个性化设置，建议先备份，然后如果该目录不为空的话，请清空），然后将上一步中下载的文件拷贝到此目录。</p>
<p>注：我的Android Studio是2.2版本，其他版本请切换到对应目录。</p>
<p>*3).然后重新启动Android Studio发现所有的style,templete等又回来了，SYNC操作也都正常了。</p>
<p>##2.使用Access Token<br>第一次Push时会弹出对话框让输入用户名和密码，但是密码存储会有安全隐患，暴露后就要修改密码了，我们可以<a href="https://help.github.com/articles/creating-an-access-token-for-command-line-use/" title="创建Token" target="_blank" rel="external">创建一个Token</a>然后授予相应权限，就能当密码使用了，不想使用的时候直接可以删除Token，不用直接给密码。<br>对Android Studio Settings Repository来说给予Read和Write的权限就可以了：<br><img src="http://upload-images.jianshu.io/upload_images/728306-078cf11039b37c40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><strong>注：创建Access Token只会在创建完成的时候出现，这时候一定要复制下来，并保存起来，如果忘记了就要删去重新创建。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##Pre.背景&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio Version：2.2;&lt;/li&gt;
&lt;li&gt;某种原因导致Android Studio个人数据设置全部被删，样式回归到“出厂模式”，但在使用SYNC同步的时候，无论Overwrite Local或者Ov
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nexus 5X Root 教程</title>
    <link href="https://lbrant.github.io/2016/08/17/Nexus-5X-Root-%E6%95%99%E7%A8%8B/"/>
    <id>https://lbrant.github.io/2016/08/17/Nexus-5X-Root-教程/</id>
    <published>2016-08-17T10:19:51.000Z</published>
    <updated>2017-01-12T11:14:31.201Z</updated>
    
    <content type="html"><![CDATA[<p>因为需要安装一个WakeLock Detector的应用，需要用到Root权限，就想着把公司的Nexus 5X Root了，以便以后方便使用。<br>Tips：CF-Auto-Root的好处是不用手动刷内核。</p>
<h3 id="0x01-准备CF-Auto-Root"><a href="#0x01-准备CF-Auto-Root" class="headerlink" title="0x01. 准备CF-Auto-Root"></a>0x01. 准备CF-Auto-Root</h3><h4 id="1-下载地址：CF-Auto-Root-bullhead-bullhead-nexus5x-zip"><a href="#1-下载地址：CF-Auto-Root-bullhead-bullhead-nexus5x-zip" class="headerlink" title="1.下载地址：CF-Auto-Root-bullhead-bullhead-nexus5x.zip;"></a>1.下载地址：<a href="https://download.chainfire.eu/891/CF-Root1/CF-Auto-Root-bullhead-bullhead-nexus5x.zip?retrieve_file=1" target="_blank" rel="external">CF-Auto-Root-bullhead-bullhead-nexus5x.zip</a>;</h4><p>如果是其他手机，请选择<a href="https://autoroot.chainfire.eu/" target="_blank" rel="external">autoroot官网</a>找到相应的手机型号，主要针对Samsung和Nexus系列; </p>
<h4 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h4><p>C:\USERS\LENOVO\DOWNLOADS\CF-AUTO-ROOT-BULLHEAD-BULLHEAD-NEXUS5X<br>│  root-linux.sh<br>│  root-mac.sh<br>│  root-windows.bat<br>│<br>├─image<br>│      CF-Auto-Root-bullhead-bullhead-nexus5x.img<br>│<br>└─tools<br>        AdbWinApi.dll<br>        AdbWinUsbApi.dll<br>        fastboot-linux<br>        fastboot-mac<br>        fastboot-windows.exe</p>
<h3 id="0x02-下载Google-USB-drivers"><a href="#0x02-下载Google-USB-drivers" class="headerlink" title="0x02. 下载Google USB drivers"></a>0x02. 下载Google USB drivers</h3><p>从网上下载PC端连接手机的驱动，然后安装（如果PC上已经安装，请忽略这一步）；</p>
<h3 id="0x03-手机开启允许OEM-Unlock的选项"><a href="#0x03-手机开启允许OEM-Unlock的选项" class="headerlink" title="0x03. 手机开启允许OEM Unlock的选项"></a>0x03. 手机开启允许OEM Unlock的选项</h3><ul>
<li>Settings-&gt;Developer Options -&gt;Allow OEM Unlock;</li>
<li><p>If you cannot find “Developer Options” under “Settings”, first go to the “Settings-&gt;About” screen, find the “Build number” entry, and tap it 7 times.</p>
<h3 id="0x04-手机重启为Bootloader-Fastmode模式"><a href="#0x04-手机重启为Bootloader-Fastmode模式" class="headerlink" title="0x04. 手机重启为Bootloader/Fastmode模式"></a>0x04. 手机重启为Bootloader/Fastmode模式</h3><p>手机关机，然后长按[Power]+[音量-]键几秒钟，手机会以fastmode模式开机；<br><img src="http://upload-images.jianshu.io/upload_images/728306-71753a874aba64e6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="0x05-进行Root"><a href="#0x05-进行Root" class="headerlink" title="0x05. 进行Root"></a>0x05. 进行Root</h3></li>
<li><p>手机通过USB线连上设备，双击运行前面解压过文件夹下的root-windows.bat（Mac和Linux平台执行相应命令）;<br><img src="http://upload-images.jianshu.io/upload_images/728306-ba84d75093d41845.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li>按任意键继续运行，这时候手机上会弹出需要确认的操作，请根据手机屏幕上的提示进行操作，[音量+-]键进行上下选择，[Power]键进行确认；<br><img src="http://upload-images.jianshu.io/upload_images/728306-3dd7cf991f67487d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>接下来手机就会自动进行Root了，成功后会自动重启。<br><img src="http://upload-images.jianshu.io/upload_images/728306-d2b5b8948cc80acc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><h3 id="0x06-检查Root是否成功"><a href="#0x06-检查Root是否成功" class="headerlink" title="0x06. 检查Root是否成功"></a>0x06. 检查Root是否成功</h3><ol>
<li>手机启动后，会发现被安装了一个SuperUser的应用;<br><img src="http://upload-images.jianshu.io/upload_images/728306-e28fff6bc31113a5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>安装<a href="https://play.google.com/store/apps/details?id=com.joeykrim.rootcheck&amp;hl=zh_CN" target="_blank" rel="external">RootChecker</a>，如果链接无法打开，就用Baidu|Bing搜索一下;</li>
<li>启动RootChecker，如果出现确认授权的对话框，Root就成功了。<br><img src="http://upload-images.jianshu.io/upload_images/728306-c5b5ce4718b4e4e6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ol>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为需要安装一个WakeLock Detector的应用，需要用到Root权限，就想着把公司的Nexus 5X Root了，以便以后方便使用。&lt;br&gt;Tips：CF-Auto-Root的好处是不用手动刷内核。&lt;/p&gt;
&lt;h3 id=&quot;0x01-准备CF-Auto-Root&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ConxtMenu高级用法</title>
    <link href="https://lbrant.github.io/2015/11/04/ConxtMenu%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>https://lbrant.github.io/2015/11/04/ConxtMenu高级用法/</id>
    <published>2015-11-04T05:31:00.000Z</published>
    <updated>2017-01-12T11:07:52.664Z</updated>
    
    <content type="html"><![CDATA[<p>##背景<br>我们经常在列表的页面中，点击列表中的行，一般进入详情页面，长按列表中一行，会弹出一个菜单，包含了对某一行的操作（编辑、删除等等），也知道通常的用法：</p>
<ul>
<li>0x01. 在Activity中注册需要上下文菜单的View：<br> <code>registerForContextMenu(mListView);</code></li>
<li><p>0x02. 然后在Activity中继承onCreateContextMenu方法，添加菜单项：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) &#123;    </div><div class="line">Log.d(LOG_TAG, &quot;onCreateContextMenu&quot;);    </div><div class="line">super.onCreateContextMenu(menu, v, menuInfo);    </div><div class="line">menu.setHeaderTitle(R.string.prompt);    </div><div class="line">menu.add(Menu.NONE, R.id.context_menu_item_delete_record, Menu.NONE, R.string.delete_record);//groupId, itemId, order, title    </div><div class="line">menu.add(Menu.NONE, R.id.context_menu_item_delete_record_with_file, Menu.NONE, R.string.delete_record_with_file);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>PS：每次长按出现上下文菜单都会调用这个方法</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/** * Called when a context menu for the &#123;@code view&#125; is about to </div><div class="line">be shown. * Unlike &#123;@link #onCreateOptionsMenu(Menu)&#125;, this will </div><div class="line">be called every * time the context menu is about to be shown and </div><div class="line">should be populated for * the view (or item inside the view for &#123;@link </div><div class="line">AdapterView&#125; subclasses, * this can be found in the &#123;@code </div><div class="line">menuInfo&#125;)). * &lt;p&gt; * Use &#123;@link #onContextItemSelected(android.view.MenuItem)&#125; to know when an </div><div class="line">* item has been selected. * &lt;p&gt; * It is not safe to hold onto the </div><div class="line">context menu after this method returns. * */</div><div class="line">public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>0x03. 接下来长按列表中一行的时候，会弹出上下文菜单：<br><img src="http://upload-images.jianshu.io/upload_images/728306-c1f997a517d009c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="device-2015-11-04-141103.png"></p>
</li>
<li><p>0x04. 点击菜单后，在Activity中继承onContextItemSelected方法进行处理：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public boolean onContextItemSelected(MenuItem item) &#123;</div><div class="line">switch (item.getItemId())&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>0x05. 获取Item标识（id）<br>我们删除数据库或者一行记录的时候，要知道主键（一般是id）才能进行操作，很多人就想办法，有的是把ListView的每个ItemView添加一个LongClickListener，然后长按的时候记录下Position，然后在进行相应处理。</p>
<p> 其实有更优雅的做法，onContextItemSelected(MenuItem item)回调的参数item可以获取item.getMenuInfo()，在ListView和Adapter的模式中，可以强制转换成AdapterContextMenuInfo，拿到targetView（即所长按行的ItemVew，如果我们需要什么参数，直接放到View.setTag中去即可）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo();</div><div class="line">   int index = info.position;</div><div class="line">   View view = info.targetView;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>至此，常见的用法就完了，那么遇到其他自定义View呢？</p>
<ul>
<li>0x06. 自定义View的ContextMenu实现<br>下面以用到的RecycleView为例，没有了ListView及其Adapter的封装，我们需要自己处理ContextMenu。<br>最重要的是继承View的两个方法：<br>1.上下文菜单Item的附加信息（上面item.getMenuInfo()）；<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/** * Views should implement this if they have extra information to </div><div class="line">associate * with the context menu. The return result is supplied as a </div><div class="line">parameter to * the &#123;@link </div><div class="line">OnCreateContextMenuListener#onCreateContextMenu(ContextMenu,</div><div class="line"> View, ContextMenuInfo)&#125; * callback. * * @return Extra information </div><div class="line">about the item for which the context menu *         should be shown. </div><div class="line">This information will vary across different *         subclasses of View. */</div><div class="line">protected ContextMenuInfo getContextMenuInfo() &#123;   </div><div class="line"> return null;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>2.ViewGroup的showContextMenuForChild，每次弹出上下文菜单都会调用此方法，需要在这里更新ContextMenuInfo；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/** * &#123;@inheritDoc&#125; */</div><div class="line">public boolean showContextMenuForChild(View originalView) &#123;    </div><div class="line">return mParent != null &amp;&amp; mParent.showContextMenuForChild(originalView);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li>0x07. 自定义RecycleView的ContextMenu全部代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div></pre></td><td class="code"><pre><div class="line">package com.lbrant.phone.view;</div><div class="line"></div><div class="line">import android.content.Context;</div><div class="line">import android.support.v7.widget.RecyclerView;</div><div class="line">import android.util.AttributeSet;</div><div class="line">import android.util.Log;</div><div class="line">import android.view.ContextMenu;</div><div class="line">import android.view.View;</div><div class="line"></div><div class="line">/**</div><div class="line"> * 作者：dell</div><div class="line"> * 时间：2015/11/3 18:34</div><div class="line"> * 文件：PhoneRecorder</div><div class="line"> * 描述：</div><div class="line"> */</div><div class="line">public class ContextMenuRecyclerView extends RecyclerView &#123;</div><div class="line">    private static final String LOG_TAG = &quot;ContextMenuRecyclerView&quot;;</div><div class="line">    private RecyclerContextMenuInfo mContextMenuInfo = new RecyclerContextMenuInfo();</div><div class="line"></div><div class="line">    public ContextMenuRecyclerView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ContextMenuRecyclerView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ContextMenuRecyclerView(Context context, AttributeSet attrs, int defStyle) &#123;</div><div class="line">        super(context, attrs, defStyle);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected ContextMenu.ContextMenuInfo getContextMenuInfo() &#123;</div><div class="line">        return mContextMenuInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean showContextMenuForChild(View originalView) &#123;</div><div class="line">        Log.d(LOG_TAG, &quot;showContextMenuForChild&quot;);</div><div class="line">        Object tag = originalView.getTag();</div><div class="line">        if (tag instanceof RecyclerItemMarker) &#123;</div><div class="line">            mContextMenuInfo.mRecycleItemMarker = (RecyclerItemMarker) tag;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        return super.showContextMenuForChild(originalView);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static class RecyclerItemMarker &#123;</div><div class="line">        public final int position;</div><div class="line">        public final Object obj;</div><div class="line"></div><div class="line">        public RecyclerItemMarker(int position, Object obj) &#123;</div><div class="line">            this.position = position;</div><div class="line">            this.obj = obj;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static class RecyclerContextMenuInfo implements ContextMenu.ContextMenuInfo &#123;</div><div class="line">        public RecyclerItemMarker mRecycleItemMarker;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">    private class RecordRecycleViewAdapter extends RecyclerView.Adapter&lt;RecordRecycleViewAdapter.RecordViewHolder&gt; &#123;</div><div class="line">        private Cursor mCallRecordCursor;</div><div class="line">        private int mIdIndex;</div><div class="line">        private int mPhoneNumberIndex;</div><div class="line">        private int mCallTimeIndex;</div><div class="line">        private int mDurationIndex;</div><div class="line">        private int mPathIndex;</div><div class="line"></div><div class="line">        public RecordRecycleViewAdapter(Cursor cursor) &#123;</div><div class="line">            mCallRecordCursor = cursor;</div><div class="line">            updateCursorColumnIndex();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        private void updateCursorColumnIndex() &#123;</div><div class="line">            if (mCallRecordCursor != null) &#123;</div><div class="line">                mIdIndex = mCallRecordCursor.getColumnIndex(BaseDatabaseHelper.RECORDS_COLUMNS._ID);</div><div class="line">                mPhoneNumberIndex = mCallRecordCursor.getColumnIndex(BaseDatabaseHelper.RECORDS_COLUMNS.NUMBER);</div><div class="line">                mCallTimeIndex = mCallRecordCursor.getColumnIndex(BaseDatabaseHelper.RECORDS_COLUMNS.CALL_TIME);</div><div class="line">                mDurationIndex = mCallRecordCursor.getColumnIndex(BaseDatabaseHelper.RECORDS_COLUMNS.DURATION);</div><div class="line">                mPathIndex = mCallRecordCursor.getColumnIndex(BaseDatabaseHelper.RECORDS_COLUMNS.PATH);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public RecordRecycleViewAdapter.RecordViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</div><div class="line">            View contentView = LayoutInflater.from(parent.getContext()).inflate(R.layout.record_list_item, parent, false);</div><div class="line">            RecordViewHolder viewHolder = new RecordViewHolder(contentView);</div><div class="line">            return viewHolder;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onBindViewHolder(RecordRecycleViewAdapter.RecordViewHolder holder, final int position) &#123;</div><div class="line">            holder.itemView.setLongClickable(true);</div><div class="line">            if (mCallRecordCursor != null &amp;&amp; mCallRecordCursor.moveToPosition(position)) &#123;</div><div class="line">                long id = mCallRecordCursor.getLong(mIdIndex);</div><div class="line">                String phoneNumber = mCallRecordCursor.getString(mPhoneNumberIndex);</div><div class="line">                long seconds = mCallRecordCursor.getLong(mDurationIndex);</div><div class="line">                String callTime = mCallRecordCursor.getString(mCallTimeIndex);</div><div class="line">                String path = mCallRecordCursor.getString(mPathIndex);</div><div class="line">                String duration = String.format(&quot;%1$02d:%2$02d:%3$02d&quot;, seconds / 3600, seconds % 3600 / 60, seconds % 60);</div><div class="line"></div><div class="line">                RecordInfo info = new RecordInfo();</div><div class="line">                info.setId(id);</div><div class="line">                info.setPhoneNumber(phoneNumber);</div><div class="line">                info.setSecondsDuration(seconds);</div><div class="line">                info.setCallTime(callTime);</div><div class="line">                info.setPath(path);</div><div class="line"></div><div class="line">                holder.itemView.setTag(new ContextMenuRecyclerView.RecyclerItemMarker(position, info));</div><div class="line">                holder.mTextViewPhoneNumber.setText(phoneNumber);</div><div class="line">                holder.mTextViewDuration.setText(duration);</div><div class="line">                holder.mTextviewCallTime.setText(callTime);</div><div class="line"></div><div class="line">                Cursor cursor = queryContactByPhoneNumber(ContactsContract.CommonDataKinds.Phone.NUMBER + &quot; = &apos;&quot; + phoneNumber + &quot;&apos;&quot;);</div><div class="line">                if (cursor != null) &#123;</div><div class="line">                    if (cursor.moveToNext()) &#123;</div><div class="line">                        long contactId = cursor.getInt(0);</div><div class="line">                        Cursor contactCursor = queryContact(ContactsContract.Contacts._ID + &quot;=&quot; + contactId);</div><div class="line">                        if (contactCursor != null) &#123;</div><div class="line">                            holder.mTextViewName.setText(contactCursor.getString(1));</div><div class="line">                            contactCursor.close();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    cursor.close();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void onViewRecycled(RecordViewHolder holder) &#123;</div><div class="line">            super.onViewRecycled(holder);</div><div class="line">            holder.itemView.setOnCreateContextMenuListener(null);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public int getItemCount() &#123;</div><div class="line">            return mCallRecordCursor == null ? 0 : mCallRecordCursor.getCount();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void changeCursor(Cursor cursor) &#123;</div><div class="line">            if (cursor != mCallRecordCursor) &#123;</div><div class="line">                if (mCallRecordCursor != null) &#123;</div><div class="line">                    mCallRecordCursor.close();</div><div class="line">                &#125;</div><div class="line">                mCallRecordCursor = cursor;</div><div class="line">                updateCursorColumnIndex();</div><div class="line">                notifyDataSetChanged();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public class RecordViewHolder extends RecyclerView.ViewHolder &#123;</div><div class="line">            private ImageView mImageViewAvatar;</div><div class="line">            private TextView mTextViewPhoneNumber;</div><div class="line">            private TextView mTextViewName;</div><div class="line">            private TextView mTextviewCallTime;</div><div class="line">            private TextView mTextViewDuration;</div><div class="line"></div><div class="line">            public RecordViewHolder(View itemView) &#123;</div><div class="line">                super(itemView);</div><div class="line">                mImageViewAvatar = (ImageView) itemView.findViewById(R.id.imageViewAvatar);</div><div class="line">                mTextViewName = (TextView) itemView.findViewById(R.id.textViewName);</div><div class="line">                mTextViewPhoneNumber = (TextView) itemView.findViewById(R.id.textViewPhoneNumber);</div><div class="line">                mTextviewCallTime = (TextView) itemView.findViewById(R.id.textViewCallTime);</div><div class="line">                mTextViewDuration = (TextView) itemView.findViewById(R.id.textViewDuration);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p><strong>有两个地方需要注意：</strong><br>1.onBindViewHolder中给ItemView添加Tag;<br>2.设置ItemView的LongClickable为true，不然不会出现上下文菜单（具体原因见ContextMenu原理分析）；<br>holder.itemView.setLongClickable(true);</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##背景&lt;br&gt;我们经常在列表的页面中，点击列表中的行，一般进入详情页面，长按列表中一行，会弹出一个菜单，包含了对某一行的操作（编辑、删除等等），也知道通常的用法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0x01. 在Activity中注册需要上下文菜单的View：&lt;br&gt; &lt;code
    
    </summary>
    
    
  </entry>
  
</feed>
